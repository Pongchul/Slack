{"version":3,"file":"767.js","mappings":"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","sources":["webpack://alecture/./node_modules/dequal/lite/index.mjs","webpack://alecture/./node_modules/swr/esm/libs/hash.js","webpack://alecture/./node_modules/swr/esm/libs/web-preset.js","webpack://alecture/./node_modules/swr/esm/config.js","webpack://alecture/./node_modules/swr/esm/cache.js","webpack://alecture/./node_modules/swr/esm/swr-config-context.js","webpack://alecture/./node_modules/swr/esm/use-swr.js","webpack://alecture/./node_modules/swr/esm/index.js"],"sourcesContent":["var has = Object.prototype.hasOwnProperty;\n\nexport function dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nvar table = new WeakMap();\n// counter of the key\nvar counter = 0;\n// hashes an array of objects and returns a string\nexport default function hash(args) {\n    if (!args.length)\n        return '';\n    var key = 'arg';\n    for (var i = 0; i < args.length; ++i) {\n        if (args[i] === null) {\n            key += '@null';\n            continue;\n        }\n        var _hash = void 0;\n        if (typeof args[i] !== 'object' && typeof args[i] !== 'function') {\n            // need to consider the case that args[i] is a string:\n            // args[i]        _hash\n            // \"undefined\" -> '\"undefined\"'\n            // undefined   -> 'undefined'\n            // 123         -> '123'\n            // \"null\"      -> '\"null\"'\n            if (typeof args[i] === 'string') {\n                _hash = '\"' + args[i] + '\"';\n            }\n            else {\n                _hash = String(args[i]);\n            }\n        }\n        else {\n            if (!table.has(args[i])) {\n                _hash = counter;\n                table.set(args[i], counter++);\n            }\n            else {\n                _hash = table.get(args[i]);\n            }\n        }\n        key += '@' + _hash;\n    }\n    return key;\n}\n","function isOnline() {\n    if (typeof navigator !== 'undefined' &&\n        typeof navigator.onLine !== 'undefined') {\n        return navigator.onLine;\n    }\n    // always assume it's online\n    return true;\n}\nfunction isDocumentVisible() {\n    if (typeof document !== 'undefined' &&\n        typeof document.visibilityState !== 'undefined') {\n        return document.visibilityState !== 'hidden';\n    }\n    // always assume it's visible\n    return true;\n}\nvar fetcher = function (url) { return fetch(url).then(function (res) { return res.json(); }); };\nexport default {\n    isOnline: isOnline,\n    isDocumentVisible: isDocumentVisible,\n    fetcher: fetcher\n};\n","import { dequal } from 'dequal/lite';\nimport Cache from './cache';\nimport webPreset from './libs/web-preset';\n// cache\nvar cache = new Cache();\n// error retry\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n    if (!config.isDocumentVisible()) {\n        // if it's hidden, stop\n        // it will auto revalidate when focus\n        return;\n    }\n    if (typeof config.errorRetryCount === 'number' &&\n        opts.retryCount > config.errorRetryCount) {\n        return;\n    }\n    // exponential backoff\n    var count = Math.min(opts.retryCount || 0, 8);\n    var timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n    setTimeout(revalidate, timeout, opts);\n}\n// client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\nvar slowConnection = typeof window !== 'undefined' &&\n    navigator['connection'] &&\n    ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1;\n// config\nvar defaultConfig = {\n    // events\n    onLoadingSlow: function () { },\n    onSuccess: function () { },\n    onError: function () { },\n    onErrorRetry: onErrorRetry,\n    errorRetryInterval: (slowConnection ? 10 : 5) * 1000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: (slowConnection ? 5 : 3) * 1000,\n    refreshInterval: 0,\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n    shouldRetryOnError: true,\n    suspense: false,\n    compare: dequal,\n    fetcher: webPreset.fetcher,\n    isOnline: webPreset.isOnline,\n    isDocumentVisible: webPreset.isDocumentVisible,\n    isPaused: function () { return false; }\n};\nexport { cache };\nexport default defaultConfig;\n","import hash from './libs/hash';\nvar Cache = /** @class */ (function () {\n    function Cache(initialData) {\n        if (initialData === void 0) { initialData = {}; }\n        this.__cache = new Map(Object.entries(initialData));\n        this.__listeners = [];\n    }\n    Cache.prototype.get = function (key) {\n        var _key = this.serializeKey(key)[0];\n        return this.__cache.get(_key);\n    };\n    Cache.prototype.set = function (key, value) {\n        var _key = this.serializeKey(key)[0];\n        this.__cache.set(_key, value);\n        this.notify();\n    };\n    Cache.prototype.keys = function () {\n        return Array.from(this.__cache.keys());\n    };\n    Cache.prototype.has = function (key) {\n        var _key = this.serializeKey(key)[0];\n        return this.__cache.has(_key);\n    };\n    Cache.prototype.clear = function () {\n        this.__cache.clear();\n        this.notify();\n    };\n    Cache.prototype.delete = function (key) {\n        var _key = this.serializeKey(key)[0];\n        this.__cache.delete(_key);\n        this.notify();\n    };\n    // TODO: introduce namespace for the cache\n    Cache.prototype.serializeKey = function (key) {\n        var args = null;\n        if (typeof key === 'function') {\n            try {\n                key = key();\n            }\n            catch (err) {\n                // dependencies not ready\n                key = '';\n            }\n        }\n        if (Array.isArray(key)) {\n            // args array\n            args = key;\n            key = hash(key);\n        }\n        else {\n            // convert null to ''\n            key = String(key || '');\n        }\n        var errorKey = key ? 'err@' + key : '';\n        var isValidatingKey = key ? 'validating@' + key : '';\n        return [key, args, errorKey, isValidatingKey];\n    };\n    Cache.prototype.subscribe = function (listener) {\n        var _this = this;\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        var isSubscribed = true;\n        this.__listeners.push(listener);\n        return function () {\n            if (!isSubscribed)\n                return;\n            isSubscribed = false;\n            var index = _this.__listeners.indexOf(listener);\n            if (index > -1) {\n                _this.__listeners[index] = _this.__listeners[_this.__listeners.length - 1];\n                _this.__listeners.length--;\n            }\n        };\n    };\n    // Notify Cache subscribers about a change in the cache\n    Cache.prototype.notify = function () {\n        for (var _i = 0, _a = this.__listeners; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener();\n        }\n    };\n    return Cache;\n}());\nexport default Cache;\n","import { createContext } from 'react';\nvar SWRConfigContext = createContext({});\nSWRConfigContext.displayName = 'SWRConfigContext';\nexport default SWRConfigContext;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo, useDebugValue } from 'react';\nimport defaultConfig, { cache } from './config';\nimport SWRConfigContext from './swr-config-context';\nvar IS_SERVER = typeof window === 'undefined' ||\n    // @ts-ignore\n    !!(typeof Deno !== 'undefined' && Deno && Deno.version && Deno.version.deno);\n// polyfill for requestAnimationFrame\nvar rAF = IS_SERVER\n    ? null\n    : window['requestAnimationFrame'] || (function (f) { return setTimeout(f, 1); });\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nvar useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n// global state managers\nvar CONCURRENT_PROMISES = {};\nvar CONCURRENT_PROMISES_TS = {};\nvar FOCUS_REVALIDATORS = {};\nvar RECONNECT_REVALIDATORS = {};\nvar CACHE_REVALIDATORS = {};\nvar MUTATION_TS = {};\nvar MUTATION_END_TS = {};\n// generate strictly increasing timestamps\nvar now = (function () {\n    var ts = 0;\n    return function () { return ++ts; };\n})();\n// setup DOM events listeners for `focus` and `reconnect` actions\nif (!IS_SERVER &&\n    window.addEventListener &&\n    typeof document !== 'undefined' &&\n    typeof document.addEventListener !== 'undefined') {\n    var revalidate_1 = function (revalidators) {\n        if (!defaultConfig.isDocumentVisible() || !defaultConfig.isOnline())\n            return;\n        for (var key in revalidators) {\n            if (revalidators[key][0])\n                revalidators[key][0]();\n        }\n    };\n    // focus revalidate\n    document.addEventListener('visibilitychange', function () { return revalidate_1(FOCUS_REVALIDATORS); }, false);\n    window.addEventListener('focus', function () { return revalidate_1(FOCUS_REVALIDATORS); }, false);\n    // reconnect revalidate\n    window.addEventListener('online', function () { return revalidate_1(RECONNECT_REVALIDATORS); }, false);\n}\nvar trigger = function (_key, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    var _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2], keyValidating = _a[3];\n    if (!key)\n        return Promise.resolve();\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        var currentData = cache.get(key);\n        var currentError = cache.get(keyErr);\n        var currentIsValidating = cache.get(keyValidating);\n        var promises = [];\n        for (var i = 0; i < updaters.length; ++i) {\n            promises.push(updaters[i](shouldRevalidate, currentData, currentError, currentIsValidating, i > 0));\n        }\n        // return new updated value\n        return Promise.all(promises).then(function () { return cache.get(key); });\n    }\n    return Promise.resolve(cache.get(key));\n};\nvar broadcastState = function (key, data, error, isValidating) {\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (var i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error, isValidating);\n        }\n    }\n};\nvar mutate = function (_key, _data, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var _a, key, keyErr, beforeMutationTs, beforeConcurrentPromisesTs, data, error, isAsyncMutation, err_1, shouldAbort, updaters, promises, i;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2];\n                    if (!key)\n                        return [2 /*return*/];\n                    // if there is no new data to update, let's just revalidate the key\n                    if (typeof _data === 'undefined')\n                        return [2 /*return*/, trigger(_key, shouldRevalidate)\n                            // update global timestamps\n                        ];\n                    // update global timestamps\n                    MUTATION_TS[key] = now() - 1;\n                    MUTATION_END_TS[key] = 0;\n                    beforeMutationTs = MUTATION_TS[key];\n                    beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n                    isAsyncMutation = false;\n                    if (_data && typeof _data === 'function') {\n                        // `_data` is a function, call it passing current cache value\n                        try {\n                            _data = _data(cache.get(key));\n                        }\n                        catch (err) {\n                            error = err;\n                        }\n                    }\n                    if (!(_data && typeof _data.then === 'function')) return [3 /*break*/, 5];\n                    // `_data` is a promise\n                    isAsyncMutation = true;\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _data];\n                case 2:\n                    data = _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    err_1 = _b.sent();\n                    error = err_1;\n                    return [3 /*break*/, 4];\n                case 4: return [3 /*break*/, 6];\n                case 5:\n                    data = _data;\n                    _b.label = 6;\n                case 6:\n                    shouldAbort = function () {\n                        // check if other mutations have occurred since we've started this mutation\n                        if (beforeMutationTs !== MUTATION_TS[key] ||\n                            beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n                            if (error)\n                                throw error;\n                            return true;\n                        }\n                    };\n                    // if there's a race we don't update cache or broadcast change, just return the data\n                    if (shouldAbort())\n                        return [2 /*return*/, data];\n                    if (typeof data !== 'undefined') {\n                        // update cached data\n                        cache.set(key, data);\n                    }\n                    // always update or reset the error\n                    cache.set(keyErr, error);\n                    // reset the timestamp to mark the mutation has ended\n                    MUTATION_END_TS[key] = now() - 1;\n                    if (!!isAsyncMutation) return [3 /*break*/, 8];\n                    // let's always broadcast in the next tick\n                    // to dedupe synchronous mutation calls\n                    // check out https://github.com/vercel/swr/pull/735 for more details\n                    return [4 /*yield*/, 0\n                        // we skip broadcasting if there's another mutation happened synchronously\n                    ];\n                case 7:\n                    // let's always broadcast in the next tick\n                    // to dedupe synchronous mutation calls\n                    // check out https://github.com/vercel/swr/pull/735 for more details\n                    _b.sent();\n                    // we skip broadcasting if there's another mutation happened synchronously\n                    if (shouldAbort())\n                        return [2 /*return*/, data];\n                    _b.label = 8;\n                case 8:\n                    updaters = CACHE_REVALIDATORS[key];\n                    if (updaters) {\n                        promises = [];\n                        for (i = 0; i < updaters.length; ++i) {\n                            promises.push(updaters[i](!!shouldRevalidate, data, error, undefined, i > 0));\n                        }\n                        // return new updated value\n                        return [2 /*return*/, Promise.all(promises).then(function () {\n                                if (error)\n                                    throw error;\n                                return cache.get(key);\n                            })];\n                    }\n                    // throw error or return data to be used by caller of mutate\n                    if (error)\n                        throw error;\n                    return [2 /*return*/, data];\n            }\n        });\n    });\n};\nfunction useSWR() {\n    var _this = this;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var _key, fn, config = {};\n    if (args.length >= 1) {\n        _key = args[0];\n    }\n    if (args.length > 2) {\n        fn = args[1];\n        config = args[2];\n    }\n    else {\n        if (typeof args[1] === 'function') {\n            fn = args[1];\n        }\n        else if (typeof args[1] === 'object') {\n            config = args[1];\n        }\n    }\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    var _a = cache.serializeKey(_key), key = _a[0], fnArgs = _a[1], keyErr = _a[2], keyValidating = _a[3];\n    config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n    var configRef = useRef(config);\n    useIsomorphicLayoutEffect(function () {\n        configRef.current = config;\n    });\n    if (typeof fn === 'undefined') {\n        // use the global fetcher\n        fn = config.fetcher;\n    }\n    var resolveData = function () {\n        var cachedData = cache.get(key);\n        return typeof cachedData === 'undefined' ? config.initialData : cachedData;\n    };\n    var initialData = resolveData();\n    var initialError = cache.get(keyErr);\n    var initialIsValidating = !!cache.get(keyValidating);\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    var stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    var stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: initialIsValidating\n    });\n    // display the data label in the React DevTools next to SWR hooks\n    useDebugValue(stateRef.current.data);\n    var _b = useState(null), rerender = _b[1];\n    var dispatch = useCallback(function (payload) {\n        var shouldUpdateState = false;\n        for (var k in payload) {\n            if (stateRef.current[k] === payload[k]) {\n                continue;\n            }\n            stateRef.current[k] = payload[k];\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState || config.suspense) {\n            // if component is unmounted, should skip rerender\n            // if component is not mounted, should skip rerender\n            if (unmountedRef.current || !initialMountedRef.current)\n                return;\n            rerender({});\n        }\n    }, \n    // config.suspense isn't allowed to change during the lifecycle\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // error ref inside revalidate (is last request errored?)\n    var unmountedRef = useRef(false);\n    var keyRef = useRef(key);\n    // check if component is mounted in suspense mode\n    var initialMountedRef = useRef(false);\n    // do unmount check for callbacks\n    var eventsCallback = useCallback(function (event) {\n        var _a;\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        if (unmountedRef.current)\n            return;\n        if (!initialMountedRef.current)\n            return;\n        if (key !== keyRef.current)\n            return;\n        (_a = configRef.current)[event].apply(_a, params);\n    }, [key]);\n    var boundMutate = useCallback(function (data, shouldRevalidate) {\n        return mutate(keyRef.current, data, shouldRevalidate);\n    }, []);\n    var addRevalidator = function (revalidators, callback) {\n        if (!callback)\n            return;\n        if (!revalidators[key]) {\n            revalidators[key] = [callback];\n        }\n        else {\n            revalidators[key].push(callback);\n        }\n    };\n    var removeRevalidator = function (revlidators, callback) {\n        if (revlidators[key]) {\n            var revalidators = revlidators[key];\n            var index = revalidators.indexOf(callback);\n            if (index >= 0) {\n                // 10x faster than splice\n                // https://jsperf.com/array-remove-by-index\n                revalidators[index] = revalidators[revalidators.length - 1];\n                revalidators.pop();\n            }\n        }\n    };\n    // start a revalidation\n    var revalidate = useCallback(function (revalidateOpts) {\n        if (revalidateOpts === void 0) { revalidateOpts = {}; }\n        return __awaiter(_this, void 0, void 0, function () {\n            var loading, shouldDeduping, newData, startAt, newState, err_2, retryCount;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!key || !fn)\n                            return [2 /*return*/, false];\n                        if (unmountedRef.current)\n                            return [2 /*return*/, false];\n                        if (configRef.current.isPaused())\n                            return [2 /*return*/, false];\n                        revalidateOpts = Object.assign({ dedupe: false }, revalidateOpts);\n                        loading = true;\n                        shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 6, , 7]);\n                        dispatch({\n                            isValidating: true\n                        });\n                        cache.set(keyValidating, true);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, stateRef.current.data, stateRef.current.error, true);\n                        }\n                        newData = void 0;\n                        startAt = void 0;\n                        if (!shouldDeduping) return [3 /*break*/, 3];\n                        // there's already an ongoing request,\n                        // this one needs to be deduplicated.\n                        startAt = CONCURRENT_PROMISES_TS[key];\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 2:\n                        newData = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3:\n                        // if no cache being rendered currently (it shows a blank page),\n                        // we trigger the loading slow event.\n                        if (config.loadingTimeout && !cache.get(key)) {\n                            setTimeout(function () {\n                                if (loading)\n                                    eventsCallback('onLoadingSlow', key, config);\n                            }, config.loadingTimeout);\n                        }\n                        if (fnArgs !== null) {\n                            CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n                        }\n                        else {\n                            CONCURRENT_PROMISES[key] = fn(key);\n                        }\n                        CONCURRENT_PROMISES_TS[key] = startAt = now();\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 4:\n                        newData = _a.sent();\n                        setTimeout(function () {\n                            delete CONCURRENT_PROMISES[key];\n                            delete CONCURRENT_PROMISES_TS[key];\n                        }, config.dedupingInterval);\n                        // trigger the success event,\n                        // only do this for the original request.\n                        eventsCallback('onSuccess', newData, key, config);\n                        _a.label = 5;\n                    case 5:\n                        // if there're other ongoing request(s), started after the current one,\n                        // we need to ignore the current one to avoid possible race conditions:\n                        //   req1------------------>res1        (current one)\n                        //        req2---------------->res2\n                        // the request that fired later will always be kept.\n                        if (CONCURRENT_PROMISES_TS[key] > startAt) {\n                            return [2 /*return*/, false];\n                        }\n                        // if there're other mutations(s), overlapped with the current revalidation:\n                        // case 1:\n                        //   req------------------>res\n                        //       mutate------>end\n                        // case 2:\n                        //         req------------>res\n                        //   mutate------>end\n                        // case 3:\n                        //   req------------------>res\n                        //       mutate-------...---------->\n                        // we have to ignore the revalidation result (res) because it's no longer fresh.\n                        // meanwhile, a new revalidation should be triggered when the mutation ends.\n                        if (MUTATION_TS[key] &&\n                            // case 1\n                            (startAt <= MUTATION_TS[key] ||\n                                // case 2\n                                startAt <= MUTATION_END_TS[key] ||\n                                // case 3\n                                MUTATION_END_TS[key] === 0)) {\n                            dispatch({ isValidating: false });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(key, newData);\n                        cache.set(keyErr, undefined);\n                        cache.set(keyValidating, false);\n                        newState = {\n                            isValidating: false\n                        };\n                        if (typeof stateRef.current.error !== 'undefined') {\n                            // we don't have an error\n                            newState.error = undefined;\n                        }\n                        if (!config.compare(stateRef.current.data, newData)) {\n                            // deep compare to avoid extra re-render\n                            // data changed\n                            newState.data = newData;\n                        }\n                        // merge the new state\n                        dispatch(newState);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, newData, newState.error, false);\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        err_2 = _a.sent();\n                        delete CONCURRENT_PROMISES[key];\n                        delete CONCURRENT_PROMISES_TS[key];\n                        if (configRef.current.isPaused()) {\n                            dispatch({\n                                isValidating: false\n                            });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(keyErr, err_2);\n                        // get a new error\n                        // don't use deep equal for errors\n                        if (stateRef.current.error !== err_2) {\n                            // we keep the stale data\n                            dispatch({\n                                isValidating: false,\n                                error: err_2\n                            });\n                            if (!shouldDeduping) {\n                                // also broadcast to update other hooks\n                                broadcastState(key, undefined, err_2, false);\n                            }\n                        }\n                        // events and retry\n                        eventsCallback('onError', err_2, key, config);\n                        if (config.shouldRetryOnError) {\n                            retryCount = (revalidateOpts.retryCount || 0) + 1;\n                            eventsCallback('onErrorRetry', err_2, key, config, revalidate, Object.assign({ dedupe: true }, revalidateOpts, { retryCount: retryCount }));\n                        }\n                        return [3 /*break*/, 7];\n                    case 7:\n                        loading = false;\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    }, \n    // dispatch is immutable, and `eventsCallback`, `fnArgs`, `keyErr`, and `keyValidating` are based on `key`,\n    // so we can them from the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // useSWR('key', () => fetch('/api/'), { suspense: true })\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(function () {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        initialMountedRef.current = true;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        var currentHookData = stateRef.current.data;\n        var latestKeyedData = resolveData();\n        // update the state if the key changed (not the inital render) or cache updated\n        if (keyRef.current !== key) {\n            keyRef.current = key;\n        }\n        if (!config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n        }\n        // revalidate with deduping\n        var softRevalidate = function () { return revalidate({ dedupe: true }); };\n        // trigger a revalidation\n        if (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined)) {\n            if (typeof latestKeyedData !== 'undefined' && !IS_SERVER) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                rAF(softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        var pending = false;\n        var onFocus = function () {\n            if (pending || !configRef.current.revalidateOnFocus)\n                return;\n            pending = true;\n            softRevalidate();\n            setTimeout(function () { return (pending = false); }, configRef.current.focusThrottleInterval);\n        };\n        var onReconnect = function () {\n            if (configRef.current.revalidateOnReconnect) {\n                softRevalidate();\n            }\n        };\n        // register global cache update listener\n        var onUpdate = function (shouldRevalidate, updatedData, updatedError, updatedIsValidating, dedupe) {\n            if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n            if (dedupe === void 0) { dedupe = true; }\n            // update hook state\n            var newState = {};\n            var needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (typeof updatedIsValidating !== 'undefined' &&\n                stateRef.current.isValidating !== updatedIsValidating) {\n                newState.isValidating = updatedIsValidating;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        addRevalidator(FOCUS_REVALIDATORS, onFocus);\n        addRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n        addRevalidator(CACHE_REVALIDATORS, onUpdate);\n        return function () {\n            // cleanup\n            dispatch = function () { return null; };\n            // mark it as unmounted\n            unmountedRef.current = true;\n            removeRevalidator(FOCUS_REVALIDATORS, onFocus);\n            removeRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n            removeRevalidator(CACHE_REVALIDATORS, onUpdate);\n        };\n    }, [key, revalidate]);\n    useIsomorphicLayoutEffect(function () {\n        var timer = null;\n        var tick = function () { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!stateRef.current.error &&\n                            (configRef.current.refreshWhenHidden ||\n                                configRef.current.isDocumentVisible()) &&\n                            (configRef.current.refreshWhenOffline || configRef.current.isOnline()))) return [3 /*break*/, 2];\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        return [4 /*yield*/, revalidate({ dedupe: true })];\n                    case 1:\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        // Read the latest refreshInterval\n                        if (configRef.current.refreshInterval && timer) {\n                            timer = setTimeout(tick, configRef.current.refreshInterval);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        if (configRef.current.refreshInterval) {\n            timer = setTimeout(tick, configRef.current.refreshInterval);\n        }\n        return function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // define returned state\n    // can be memorized since the state is a ref\n    var memoizedState = useMemo(function () {\n        var state = { revalidate: revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                },\n                enumerable: true\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                },\n                enumerable: true\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return key ? stateRef.current.isValidating : false;\n                },\n                enumerable: true\n            }\n        });\n        return state;\n        // `boundMutate` is immutable, and the immutability of `revalidate` depends on `key`\n        // so we can omit them from the deps array,\n        // but we put it to enable react-hooks/exhaustive-deps rule.\n        // `initialData` and `initialError` are not initial values\n        // because they are changed during the lifecycle\n        // so we should add them in the deps array.\n    }, [revalidate, initialData, initialError, boundMutate, key]);\n    // suspense\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        var latestData = cache.get(key);\n        var latestError = cache.get(keyErr);\n        if (typeof latestData === 'undefined') {\n            latestData = initialData;\n        }\n        if (typeof latestError === 'undefined') {\n            latestError = initialError;\n        }\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                // in this revalidate, should not rerender\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n        // return the latest data / error from cache\n        // in case `key` has changed\n        return {\n            error: latestError,\n            data: latestData,\n            // revalidate will be deprecated in the 1.x release\n            // because mutate() covers the same use case of revalidate().\n            // This remains only for backward compatibility\n            revalidate: revalidate,\n            mutate: boundMutate,\n            isValidating: stateRef.current.isValidating\n        };\n    }\n    return memoizedState;\n}\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n","export * from './use-swr';\nimport { default as useSWR } from './use-swr';\nexport { useSWRInfinite } from './use-swr-infinite';\nexport { cache } from './config';\nexport default useSWR;\n"],"names":["has","Object","prototype","hasOwnProperty","table","WeakMap","counter","isOnline","navigator","onLine","isDocumentVisible","document","visibilityState","fetcher","url","fetch","then","res","json","Cache","initialData","this","__cache","Map","entries","__listeners","get","key","_key","serializeKey","set","value","notify","keys","Array","from","clear","delete","args","err","isArray","length","i","_hash","String","hash","subscribe","listener","_this","Error","isSubscribed","push","index","indexOf","_i","_a","slowConnection","window","effectiveType","onLoadingSlow","onSuccess","onError","onErrorRetry","_","__","config","revalidate","opts","errorRetryCount","retryCount","count","Math","min","timeout","random","errorRetryInterval","setTimeout","focusThrottleInterval","dedupingInterval","loadingTimeout","refreshInterval","revalidateOnFocus","revalidateOnReconnect","refreshWhenHidden","refreshWhenOffline","shouldRetryOnError","suspense","compare","dequal","foo","bar","ctor","len","constructor","Date","getTime","RegExp","toString","call","isPaused","createContext","displayName","ts","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","apply","__generator","body","f","y","t","g","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","pop","IS_SERVER","Deno","version","deno","rAF","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","RECONNECT_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","MUTATION_END_TS","now","addEventListener","revalidate_1","revalidators","trigger","shouldRevalidate","keyErr","keyValidating","updaters","currentData","currentError","currentIsValidating","promises","all","broadcastState","data","error","isValidating","mutate","_data","beforeMutationTs","beforeConcurrentPromisesTs","isAsyncMutation","err_1","shouldAbort","_b","undefined","arguments","fn","fnArgs","assign","useContext","configRef","useRef","current","resolveData","cachedData","initialError","initialIsValidating","stateDependencies","stateRef","useDebugValue","useState","rerender","dispatch","useCallback","payload","shouldUpdateState","k","unmountedRef","initialMountedRef","keyRef","eventsCallback","event","params","boundMutate","addRevalidator","callback","removeRevalidator","revlidators","revalidateOpts","loading","shouldDeduping","newData","startAt","newState","err_2","dedupe","currentHookData","latestKeyedData","softRevalidate","revalidateOnMount","pending","onFocus","onReconnect","onUpdate","updatedData","updatedError","updatedIsValidating","needUpdate","timer","tick","clearTimeout","memoizedState","useMemo","state","defineProperties","enumerable","latestData","latestError"],"sourceRoot":""}