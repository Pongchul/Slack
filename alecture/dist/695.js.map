{"version":3,"file":"695.js","mappings":"8OAqBA,QARiB,SAAIA,GACnB,I,IAAA,G,GAA0BC,EAAAA,EAAAA,UAASD,G,EAAnC,E,8zBAAOE,EAAP,KAAcC,EAAd,KAIA,MAAO,CAACD,GAHQE,EAAAA,EAAAA,cAAY,SAACC,GAC3BF,EAASE,EAAEC,OAAOJ,MACnB,GAAE,IACqBC,EACzB,C,ilCC8ED,QA/Ec,WACZ,OAA4CI,EAAAA,EAAAA,IAC1C,kCACAC,EAAAA,GAFMC,EAAR,EAAQA,KAAaC,GAArB,EAAcC,MAAd,EAAqBD,YAIrB,GAJA,EAAiCE,OAIjC,GAAoCX,EAAAA,EAAAA,WAAS,GAA7C,IAAOY,EAAP,KAAmBC,EAAnB,KACA,KAA+BC,EAAAA,EAAAA,GAAS,IAAxC,GAAOC,EAAP,KAAcC,EAAd,KACA,KAAqCF,EAAAA,EAAAA,GAAS,IAA9C,GAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWhB,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEgB,iBACFP,GAAc,GACdQ,IAAAA,KAEI,wCACA,CAAEN,MAAAA,EAAOE,SAAAA,GACT,CACEK,iBAAiB,IAGpBC,MAAK,SAACC,GACLf,GACD,IACAgB,OAAM,SAACf,GAAU,MAChBG,EAAyC,OAA3B,UAAAH,EAAMc,gBAAN,eAAgBE,QAC/B,GACJ,GACD,CAACX,EAAOE,IAOV,OAAIT,EACK,gBAAC,KAAD,CAAUmB,GAAG,uBAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMT,SAAUA,GACd,gBAAC,KAAD,CAAOS,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CACEC,KAAK,QACLD,GAAG,QACHE,KAAK,QACL7B,MAAOc,EACPgB,SAAUf,MAIhB,gBAAC,KAAD,CAAOY,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CACEC,KAAK,WACLD,GAAG,WACHE,KAAK,WACL7B,MAAOgB,EACPc,SAAUb,KAGbN,GACC,gBAAC,KAAD,kCAGJ,gBAAC,KAAD,CAAQiB,KAAK,UAAb,QAEF,gBAAC,KAAD,sBAEE,gBAAC,KAAD,CAAMF,GAAG,WAAT,cAIP,C,oPC7FM,IAAMK,EAASC,EAAAA,EAAAA,OAAH,sRAYNC,EAAOD,EAAAA,EAAAA,KAAH,2EAMJE,EAAQF,EAAAA,EAAAA,MAAH,oOAaLG,EAAQH,EAAAA,EAAAA,MAAH,krBAsBLI,EAASJ,EAAAA,EAAAA,OAAH,8nBA4BNK,EAAQL,EAAAA,EAAAA,IAAH,kFAMLM,EAAUN,EAAAA,EAAAA,IAAH,2DAKPO,EAAgBP,EAAAA,EAAAA,EAAH,oQ,0DCrF1B,QAPgB,SAACQ,GAAD,OACdpB,IAAAA,IACOoB,EAAK,CACRnB,iBAAiB,IAElBC,MAAK,SAACC,GAAD,OAAcA,EAAShB,IAAvB,GALM,C","sources":["webpack://alecture/./hooks/useInput.ts","webpack://alecture/./pages/LogIn/index.tsx","webpack://alecture/./pages/SignUp/styles.tsx","webpack://alecture/./utils/fetcher.ts"],"sourcesContent":["import {\n  ChangeEvent,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useState,\n} from \"react\";\n\ntype ReturnTypes<T> = [\n  T,\n  (e: ChangeEvent<HTMLInputElement>) => void,\n  Dispatch<SetStateAction<T>>\n];\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setvalue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setvalue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setvalue];\n};\n\nexport default useInput;\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Success,\n  Form,\n  Error,\n  Label,\n  Input,\n  LinkContainer,\n  Button,\n  Header,\n} from \"@pages/SignUp/styles\";\nimport axios from \"axios\";\nimport useSWR from \"swr\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport useInput from \"@hooks/useInput\";\nimport fetcher from \"@utils/fetcher\";\n\nconst LogIn = () => {\n  const { data, error, revalidate, mutate } = useSWR(\n    \"http://localhost:3095/api/users\",\n    fetcher\n  );\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          \"http://localhost:3095/api/users/login\",\n          { email, password },\n          {\n            withCredentials: true,\n          }\n        )\n        .then((response) => {\n          revalidate();\n        })\n        .catch((error) => {\n          setLogInError(error.response?.status === 401);\n        });\n    },\n    [email, password]\n  );\n\n  // if (data === undefined) {\n  //   return <div>로딩중...</div>;\n  // }\n\n  if (data) {\n    return <Redirect to=\"/workspace/channel\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n          </div>\n          {logInError && (\n            <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>\n          )}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <Link to=\"/signup\">회원가입 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma,\n    Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from \"axios\";\n\nconst fetcher = (url: string) =>\n  axios\n    .get(url, {\n      withCredentials: true,\n    })\n    .then((response) => response.data);\n\nexport default fetcher;\n"],"names":["initialData","useState","value","setvalue","useCallback","e","target","useSWR","fetcher","data","revalidate","error","mutate","logInError","setLogInError","useInput","email","onChangeEmail","password","onChangePassword","onSubmit","preventDefault","axios","withCredentials","then","response","catch","status","to","id","type","name","onChange","Header","styled","Form","Label","Input","Button","Error","Success","LinkContainer","url"],"sourceRoot":""}