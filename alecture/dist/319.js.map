{"version":3,"file":"319.js","mappings":"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","sources":["webpack://alecture/./hooks/useInput.ts","webpack://alecture/./pages/SignUp/index.tsx","webpack://alecture/./pages/SignUp/styles.tsx"],"sourcesContent":["import {\n  ChangeEvent,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useState,\n} from \"react\";\n\ntype ReturnTypes<T> = [\n  T,\n  (e: ChangeEvent<HTMLInputElement>) => void,\n  Dispatch<SetStateAction<T>>\n];\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setvalue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setvalue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setvalue];\n};\n\nexport default useInput;\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Form,\n  Label,\n  Input,\n  LinkContainer,\n  Button,\n  Header,\n  Success,\n  Error,\n} from \"./styles\";\nimport { Link } from \"react-router-dom\";\nimport useInput from \"@hooks/useInput\";\nimport axios from \"axios\";\n\nconst SignUp = () => {\n  const [email, onChangeEmail] = useInput(\"\");\n  const [nickname, onChangeNickname] = useInput(\"\");\n  const [password, , setPassword] = useInput(\"\");\n  const [passwordCheck, , setPasswordCheck] = useInput(\"\");\n  const [mismatchError, setMissmatchError] = useState(false);\n  const [signUpError, setSignupError] = useState(\"\");\n  const [signUpSuccess, setSignupSuccess] = useState(false);\n  const onSubmit = useCallback(\n    // useCallback 자체가 이 함수를 캐싱해둬라 기억해둬라 그런 의미. 언제까지 ? deps의 값이 바뀔 때까지. 하나라도 바뀌면 이 함수를 새로 만들고 바뀌는게 없으면 이전 함수 계속 쓰고\n    (e) => {\n      e.preventDefault();\n      if (!mismatchError) {\n        console.log(\"Signup in server\");\n        setSignupError(\"\"); // 초기화 함수 비슷한 느낌\n        setSignupSuccess(false);\n        axios\n          .post(\"http://localhost:3095/api/users\", {\n            email,\n            nickname,\n            password,\n          })\n          .then((response) => {\n            console.log(response);\n            setSignupSuccess(true);\n          })\n          .catch((error) => {\n            console.log(error.response);\n            setSignupError(error.response.data);\n          })\n          .finally(() => {});\n      }\n    },\n    [email, nickname, password, passwordCheck, mismatchError] // deps에 함수안에 쓰이는 state들 넣어 줘야 한다. 그래야 state가 업데이트 된다.\n  );\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n      setMissmatchError(e.target.value !== passwordCheck);\n    },\n    [passwordCheck]\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setMissmatchError(e.target.value !== password);\n    },\n    [password]\n  );\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input\n              type=\"text\"\n              id=\"nickname\"\n              name=\"nickname\"\n              value={nickname}\n              onChange={onChangeNickname}\n            />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>{signUpError}</Error>}\n          {signUpSuccess && (\n            <Success>회원가입되었습니다! 로그인해주세요.</Success>\n          )}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <LinkContainer>\n        이미 회원이신가요?&nbsp;\n        <Link to=\"/login\">로그인 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma,\n    Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n"],"names":["initialData","useState","value","setvalue","useCallback","e","target","useInput","email","onChangeEmail","nickname","onChangeNickname","password","setPassword","passwordCheck","setPasswordCheck","mismatchError","setMissmatchError","signUpError","setSignupError","signUpSuccess","setSignupSuccess","onSubmit","preventDefault","console","log","axios","then","response","catch","error","data","finally","onChangePassword","onChangePasswordCheck","id","type","name","onChange","to","Header","styled","Form","Label","Input","Button","Error","Success","LinkContainer"],"sourceRoot":""}